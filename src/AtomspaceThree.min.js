function AtomspaceThree(){function o(e,t){console.log(e+"= ("+t.x+","+t.y+","+t.z+")")}function u(e){switch(Math.sign(e)){case 1:return Math.random();case-1:return-Math.random();default:return Math.random()-.5}}function a(){var e=[3355596,3394611,3394764,13421619,13382451,13382604,6710886];for(var t in e)n[t]=new THREE.MeshPhongMaterial({color:e[t]})}function f(e,t,n){var r=new THREE.Geometry;var i=new THREE.Mesh(e),s=new THREE.Mesh(t);s.position.y+=n;s.updateMatrix();r.merge(i.geometry);r.merge(s.geometry,s.matrix);return r}function l(e,n){var r=e,i=n;if(t[r]===undefined)r="ball";if(t[r][i]===undefined)i=0;return t[r][i]}function c(e,t,r){return new THREE.Mesh(l(e,t),n[r])}function h(){return c(e.geoNames[Math.floor(Math.random()*e.geoNames.length)],0,Math.floor(Math.random()*6))}function p(e,t){var n=.5;var r=t.x-e.x;var i=t.y-e.y;var s=t.z-e.z;return new THREE.Vector3(t.x-r*n,t.y-i*n,t.z-s*n)}function d(e,r){var i=new THREE.Mesh(t.cone[2],n[6]);i.position.copy(p(e,r));var s=(new THREE.Vector3).copy(r).sub(e).normalize();i.quaternion.setFromUnitVectors(THREE.Object3D.DefaultUp,s);return i}function v(e,t){var n=2;var r=t.x-e.x;var i=t.y-e.y;var s=t.z-e.z;var o=Math.sqrt(r*r+i*i+s*s);var u=r*n/o;var a=i*n/o;var f=s*n/o;return[new THREE.Vector3(e.x+u,e.y+a,e.z+f),new THREE.Vector3(t.x-u,t.y-a,t.z-f)]}function m(e,t){var n=new THREE.Geometry;var r=v(e,t);n.vertices.push(r[0]);n.vertices.push(r[1]);var i=new THREE.LineBasicMaterial;return new THREE.Line(n,i)}function g(e,t,n,s,o,a,f,l){function c(){var e,t=0;switch(placement){case"0":{if(!f)t=-Math.random();e=new THREE.Vector3(u(0),u(0),t);e.normalize().multiplyScalar(40*Math.random());e.z+=o.position.z+20;e.sub(n.position);return e};default:{if(l&&placement==1){if(!f)t=-u(l.z);e=new THREE.Vector3(u(l.x),u(l.y),t)}else{if(!f)t=u(0);e=new THREE.Vector3(u(0),u(0),t)}return e.normalize().multiplyScalar(a)}}}function p(t){var n=c();var u=h();u.position.copy((new THREE.Vector3).copy(t).add(n));var l=[];l.push(s);r.push({mesh:u,rel:l,physics:[]});var p=r.length-1;r[s].rel.push(p);var d=Math.random()*6<1;i.push({mesh:null,directed:d,amesh:null,from:s,to:p});var v=Math.floor(Math.random()*4)+1;g(e-1,v,u,p,o,a,f,n)}if(e===0)return;for(var d=0;d<t;d++)p(n.position)}function y(e,t,n,i){for(var s=0;s<r.length;s++){var o=0,u=0,a=0;for(var f=0;f<r.length;f++)if(s!=f){var l=r[s].physics[e].x-r[f].physics[e].x;var c=r[s].physics[e].y-r[f].physics[e].y;var h=r[s].physics[e].z-r[f].physics[e].z;var p=Math.sqrt(l*l+c*c+h*h)+.01;var d=t*t/p;if(i==0||i>p){o+=l/p*d;u+=c/p*d;a+=h/p*d}var v=false;for(var m=0;m<r[s].rel.length;m++)if(f==r[s].rel[m])v=true;if(v){var g=p*p/t;o-=l/p*g;u-=c/p*g;a-=h/p*g}}if(o>0)o=Math.min(o,n);else o=Math.max(o,-n);if(u>0)u=Math.min(u,n);else u=Math.max(u,-n);if(a>0)a=Math.min(a,n);else a=Math.max(a,-n);var y=new THREE.Vector3(r[s].physics[e].x+o,r[s].physics[e].y+u,r[s].physics[e].z+a);r[s].physics.push(y)}}var e={},t={},n=[],r=[],i=[],s=[5,3.3,1.6];e.geoNames=["ball","cube","storus","htorus","ctorus","tetra","doceda","can","cone","slab","stick","plank","column","cfrus","saturn","stuck","bloke","devil","waiter","biball","hexie","pawn","connie","angel","hangel","sangel","cangel","tangel","pangel","xangel","kevil","cross","canx","ballx","bull","hull","sull","cull","tull","pull","xull","castle","hastle","sastle","ccast","tastle","pastle","xastle","ldevil","codev","hodev","sodev","cadev","todev","podev","xodev","cbball","hbball","sbball","ccbball","tbball","pbball","xbball"];computeGeometries=function(){var e=s[0],n=s[1],r=s[2],i=.5,o=.2;var u=e*i,a=n*i,l=r*i,c=e*o,h=n*o,p=r*o;t.ball=[new THREE.SphereGeometry(u,20,20),new THREE.SphereGeometry(a,20,20),new THREE.SphereGeometry(l,20,20)];t.cube=[new THREE.BoxGeometry(e,e,e),new THREE.BoxGeometry(n,n,n),new THREE.BoxGeometry(r,r,r)];t.storus=[new THREE.TorusGeometry(u,c,8,4),new THREE.TorusGeometry(a,h,8,4),new THREE.TorusGeometry(l,p,8,4)];t.htorus=[new THREE.TorusGeometry(u,c,8,6),new THREE.TorusGeometry(a,h,8,6),new THREE.TorusGeometry(l,p,8,6)];t.ctorus=[new THREE.TorusGeometry(u,c,8,20),new THREE.TorusGeometry(a,h,8,20),new THREE.TorusGeometry(l,p,8,20)];t.tetra=[new THREE.TetrahedronGeometry(u,0),new THREE.TetrahedronGeometry(a,0),new THREE.TetrahedronGeometry(l,0)];t.doceda=[new THREE.DodecahedronGeometry(u,0)];t.can=[new THREE.CylinderGeometry(u,u,e,16),new THREE.CylinderGeometry(a,a,n,16),new THREE.CylinderGeometry(l,l,r,16)];t.cone=[new THREE.CylinderGeometry(0,u,e,16),new THREE.CylinderGeometry(0,a,n,16),new THREE.CylinderGeometry(0,l*.5,r,16)];t.slab=[new THREE.BoxGeometry(c,e,e),new THREE.BoxGeometry(h,n,n),new THREE.BoxGeometry(p,r,r)];t.stick=[new THREE.BoxGeometry(c,e,c),new THREE.BoxGeometry(h,n,h),new THREE.BoxGeometry(p,r,p)];t.plank=[new THREE.BoxGeometry(e,c,c),new THREE.BoxGeometry(n,h,h),new THREE.BoxGeometry(r,p,p)];t.column=[new THREE.BoxGeometry(u,e,u),new THREE.BoxGeometry(a,n,a),new THREE.BoxGeometry(l,r,l)];t.cfrus=[new THREE.CylinderGeometry(c,u,e,16),new THREE.CylinderGeometry(h,a,n,16),new THREE.CylinderGeometry(p,l,r,16)];t.saturn=[f(t.ctorus[0],t.ball[2],0)];t.stuck=[f(t.ctorus[0],t.stick[0],0)];t.bloke=[f(t.cube[1],t.column[0],0)];t.devil=[f(t.ball[0],t.cube[1],0)];t.waiter=[f(t.can[2],t.stick[0],0)];t.biball=[f(t.ball[1],t.ball[1],-1.5)];t.hexie=[f(t.htorus[0],t.ball[2],0)];t.pawn=[f(t.cfrus[1],t.ball[1],1.5)];t.connie=[f(t.cfrus[1],t.cone[1],1.5)];t.angel=[f(t.cone[1],t.ctorus[2],2)];t.hangel=[f(t.cone[1],t.htorus[2],2)];t.sangel=[f(t.cone[1],t.storus[2],2)];t.cangel=[f(t.cone[1],t.can[2],2)];t.tangel=[f(t.cone[1],t.tetra[1],1.8)];t.pangel=[f(t.cone[1],t.plank[1],1.4)];t.xangel=[f(t.pangel[0],t.stick[1],.8)];t.kevil=[f(t.devil[0],t.can[2],-2.5)];t.cross=[f(t.plank[0],t.stick[0],0),f(t.plank[1],t.stick[1],0)];t.canx=[f(t.cross[0],t.can[1],0)];t.ballx=[f(t.cross[0],t.ball[1],0)];t.bull=[f(t.ball[1],t.ctorus[2],2)];t.hull=[f(t.ball[1],t.htorus[2],2)];t.sull=[f(t.ball[1],t.storus[2],2)];t.cull=[f(t.ball[1],t.can[2],2)];t.tull=[f(t.ball[1],t.tetra[1],1.8)];t.pull=[f(t.ball[1],t.plank[1],1.4)];t.xull=[f(t.ball[1],t.cross[1],1.4)];t.castle=[f(t.can[1],t.ctorus[2],2)];t.hastle=[f(t.can[1],t.htorus[2],2)];t.sastle=[f(t.can[1],t.storus[2],2)];t.ccast=[f(t.can[1],t.can[2],2)];t.tastle=[f(t.can[1],t.tetra[1],1.8)];t.pastle=[f(t.can[1],t.plank[0],1.4)];t.xastle=[f(t.can[1],t.cross[1],1.4)];t.ldevil=[f(t.ball[1],t.cube[2],-1)];t.codev=[f(t.ldevil[0],t.ctorus[2],2)];t.hodev=[f(t.ldevil[0],t.htorus[2],2)];t.sodev=[f(t.ldevil[0],t.storus[2],2)];t.cadev=[f(t.ldevil[0],t.can[2],2)];t.todev=[f(t.ldevil[0],t.tetra[1],1.8)];t.podev=[f(t.ldevil[0],t.plank[1],1.4)];t.xodev=[f(t.ldevil[0],t.cross[1],1.4)];t.cbball=[f(t.biball[0],t.ctorus[2],2)];t.hbball=[f(t.biball[0],t.htorus[2],2)];t.sbball=[f(t.biball[0],t.storus[2],2)];t.ccbball=[f(t.biball[0],t.can[2],2)];t.tbball=[f(t.biball[0],t.tetra[1],1.8)];t.pbball=[f(t.biball[0],t.plank[1],1.4)];t.xbball=[f(t.biball[0],t.cross[1],1.4)]};e.forceDynamics=function(e,t,n,i,s){var o;for(o=0;o<r.length;o++)r[o].physics.push(r[o].mesh.position);var u=n;for(o=0;o<e;o++){y(o,t,u,i);u*=s}};e.createGraph=function(e,t,n,i,s){var o=h();o.position.z=s;r.push({mesh:o,rel:[],physics:[]});g(t,e,o,0,o,n,i,null)};e.removeGraph=function(e){var t;for(t=0;t<r.length;t++)e.remove(r[t].mesh);r=[];for(t=0;t<i.length;t++){e.remove(i[t].mesh);if(i[t].directed)e.remove(i[t].amesh)}i=[]};e.createSpline=function(){function e(e){var t=10;var n=(new THREE.Vector3(u(0),u(0),u(0))).normalize().multiplyScalar(t);n.add(r[Math.floor(Math.random()*e)].mesh.position);return n}var t=[];var n=r.length;for(var i=0;i<n;i++)t.push(e(n));return new THREE.ClosedSplineCurve3(t)};e.getNumAtoms=function(){return r.length};e.getNumLinks=function(){return i.length};e.addAtomToScene=function(e,t){e.add(r[t].mesh)};e.addLinkToScene=function(e,t){e.add(i[t].mesh);if(i[t].amesh)e.add(i[t].amesh)};e.updateAtomLocations=function(e){for(var t=0;t<r.length;t++)r[t].mesh.position.copy(r[t].physics[e])};e.updateLinkLocationsFast=function(){for(var e=0;e<i.length;e++){var t=i[e].mesh.geometry;var n=v(r[i[e].from].mesh.position,r[i[e].to].mesh.position);t.vertices[0]=n[0];t.vertices[1]=n[1];t.verticesNeedUpdate=true}};e.removeLinks=function(e){for(var t=0;t<i.length;t++)e.remove(i[t].mesh)};e.createLink=function(e,t,n){var s=r[i[t].from].mesh.position;var o=r[i[t].to].mesh.position;var u=v(s,o);i[t].mesh=m(s,o);e.add(i[t].mesh);if(n&&i[t].directed){i[t].amesh=d(s,o);e.add(i[t].amesh)}};e.createLinks=function(t){for(var n=0;n<i.length;n++)e.createLink(t,n,true)};computeGeometries();a();return e}
